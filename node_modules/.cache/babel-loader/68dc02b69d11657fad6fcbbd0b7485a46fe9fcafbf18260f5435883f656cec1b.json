{"ast":null,"code":"const cart = [];\nconst handleCart = (state = cart, action) => {\n  const product = action.payload;\n  switch (action.type) {\n    case \"ADDITEM\":\n      //Check if product already exist\n      const exist = state.find(x => x.id === product.id);\n      if (exist) {\n        //increase the qunatity\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        const product = action.payload;\n        return [...state, {\n          ...product,\n          qty: 1\n        }];\n      }\n      break;\n    case \"DELITEM\":\n      const exist1 = state.find(x => x.id === product.id);\n      if (exist1.qty === 1) {\n        return state.filter(x => x.id !== exist1.id);\n      } else {\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n      break;\n    default:\n      state;\n      break;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","action","product","payload","type","exist","find","x","id","map","qty","exist1","filter"],"sources":["/Users/dhruv.angra/Desktop/ReduxEcom/Ecom_web/ecomm/src/redux/reducers/handleCart.js"],"sourcesContent":["const cart = []\n\nconst handleCart = (state=cart, action) =>{\n    const product = action.payload;\n    switch (action.type) {\n        case \"ADDITEM\":\n            //Check if product already exist\n            const exist = state.find((x) => x.id === product.id);\n            if(exist){\n                //increase the qunatity\n                return state.map((x) =>\n                x.id=== product.id ? {...x, qty: x.qty+1} : x\n                )\n            }\n            else{\n                const product = action.payload;\n            \n            return[\n                ...state,\n                {\n                    ...product,\n                    qty: 1,\n                }\n            ]\n        }\n            break;\n\n            case \"DELITEM\":\n                const exist1 = state.find((x) => x.id === product.id)\n                if(exist1.qty === 1){\n                    return state.filter((x) => x.id !== exist1.id)\n                }\n                else{\n                    return state.map((x) =>\n                    x.id === product.id ? {...x , qty:x.qty-1} : x\n                    )\n                }\n                break;\n    \n        default:\n            state;\n            break;\n    }\n}\n\nexport default handleCart "],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAGA,CAACC,KAAK,GAACF,IAAI,EAAEG,MAAM,KAAI;EACtC,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;EAC9B,QAAQF,MAAM,CAACG,IAAI;IACf,KAAK,SAAS;MACV;MACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MACpD,IAAGH,KAAK,EAAC;QACL;QACA,OAAOL,KAAK,CAACS,GAAG,CAAEF,CAAC,IACnBA,CAAC,CAACC,EAAE,KAAIN,OAAO,CAACM,EAAE,GAAG;UAAC,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAC;QAAC,CAAC,GAAGH,CAC5C,CAAC;MACL,CAAC,MACG;QACA,MAAML,OAAO,GAAGD,MAAM,CAACE,OAAO;QAElC,OAAM,CACF,GAAGH,KAAK,EACR;UACI,GAAGE,OAAO;UACVQ,GAAG,EAAE;QACT,CAAC,CACJ;MACL;MACI;IAEA,KAAK,SAAS;MACV,MAAMC,MAAM,GAAGX,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MACrD,IAAGG,MAAM,CAACD,GAAG,KAAK,CAAC,EAAC;QAChB,OAAOV,KAAK,CAACY,MAAM,CAAEL,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKG,MAAM,CAACH,EAAE,CAAC;MAClD,CAAC,MACG;QACA,OAAOR,KAAK,CAACS,GAAG,CAAEF,CAAC,IACnBA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,GAAG;UAAC,GAAGD,CAAC;UAAGG,GAAG,EAACH,CAAC,CAACG,GAAG,GAAC;QAAC,CAAC,GAAGH,CAC7C,CAAC;MACL;MACA;IAER;MACIP,KAAK;MACL;EACR;AACJ,CAAC;AAED,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}